{"version":3,"sources":["logo.svg","dummy.png","Home.js","NavBar.js","Textbox.js","RenderResult.js","RenderManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","update","event","setState","name","target","value","search","bind","state","result","axios","get","this","then","response","window","location","replace","origin","JSON","stringify","data","catch","error","console","log","className","src","logo","alt","href","rel","min","max","step","defaultValue","disabled","placeholder","type","style","onChange","marginLeft","onClick","htmlFor","id","React","Component","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","Jumbotron","fluid","Container","text","Card","width","Img","img","height","Body","Title","rank","Text","similarity","Button","q","hash","rstList","parse","decodeURI","substring","length","CardColumns","map","index","RenderResult","HomePage","Home","AboutPage","ResultsPage","hashHistory","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6e401015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/dummy.c51e543e.png\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Slider , Input} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axios from 'axios';\n\nclass App extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.search = this.search.bind(this);\n        this.update = this.update.bind(this);\n        this.state = {\n            name: null,\n            result: [],\n        };\n      }\n    \n      search() {\n        axios.get('/api/search', { name: this.state.name })\n            .then((response) => {\n            this.setState(() => {\n                return {\n                    name: null,\n                    result: [],\n                }\n            });\n            window.location.replace(window.location.origin + \"/#/search?\" + JSON.stringify(response.data));\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n      }\n\n      update = (event) => {\n        this.setState({name:event.target.value});\n      }\n\n      render() {\n        return (\n            <>\n              <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                  Dog Recommender\n                </p>\n                <a\n                  className=\"App-link\"\n                  href=\"https://reactjs.org\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Input your expectations\n                </a>\n                <div>\n                  <Slider min={0} max={100} step={1} defaultValue={30} disabled={false}></Slider>\n                  <Input placeholder={\"input\"} type={\"text\"} style={{}} onChange={this.update}></Input>\n                  <Button type=\"primary\" style={{ marginLeft: 8 }} onClick={this.search}>\n                    Search\n                  </Button>\n                </div>\n              </header>\n              <div className=\"MarkdownEditor\">\n                <h3>Input</h3>\n                <label htmlFor=\"markdown-content\">\n                  Enter words\n                </label>\n                <textarea\n                  id=\"markdown-content\"\n                />\n                <h3>Output</h3>\n                <div\n                  className=\"content\"\n                />\n              </div>\n            </>\n        );\n      }\n}\n\nexport default App;","import React from 'react';\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\n\nclass App extends React.Component {\n      render() {\n        return (\n          <>\n            <Navbar bg=\"transparent\" variant='light' expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Logtheanalogdog</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#about\">About</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n          </>\n        );\n      }\n}\n\nexport default App;","import React from 'react';\nimport {Jumbotron, Container} from \"react-bootstrap\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Jumbotron fluid {...this.props}>\n                <Container>\n                <h1>{this.props.title}</h1>\n                <p>\n                {this.props.text}\n                </p>\n                </Container>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport {Card, Button} from \"react-bootstrap\";\nimport img from \"./dummy.png\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={img} height='180px' />\n                <Card.Body>\n                    <Card.Title>{this.props.rank + \". \" + this.props.name}</Card.Title>\n                    <Card.Text>\n                    {\"// TODO replace \" + this.props.similarity}\n                    </Card.Text>\n                    <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport {CardColumns, Container} from \"react-bootstrap\";\nimport RenderResult from \"./RenderResult\";\n\nclass App extends React.Component {\n    \n    render() {\n        const q = window.location.hash;\n        const rstList = JSON.parse(decodeURI(q.substring(9, q.length)));\n        return (\n            <>\n            <br></br>\n            <Container fluid=\"xs\">\n                <CardColumns>\n                {rstList.map((value, index) => (\n                    <>\n                        <RenderResult rank={index+1} name={value[0]} similarity={value[1]} />\n                    </>\n                ))}\n                </CardColumns>\n            </Container>\n            </>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport Home from './Home';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Navbar from './NavBar';\nimport {Container} from 'react-bootstrap';\nimport TextBox from './Textbox';\nimport RenderResult from './RenderManager';\n\n\nfunction HomePage() {\n  return (<Home/>);\n}\n\nfunction AboutPage() {\n  return (\n    <Container>\n      <TextBox title=\"About Logtheanalogdog\" text=\"Sophie Zheng (sz374), Matthew Xu (mx68), Neil Sethi (ns784),\n       Jakob Kaminsky (jk989), Yihe Zhang (yz2434)// TODO replace\" />\n    </Container>\n  );\n}\n\nfunction ResultsPage() {\n  return (\n    <RenderResult/>\n  );\n}\n\nfunction App() {\n  return (\n    <>\n    <HashRouter hashHistory>\n      <div className='App'>\n        <Container fluid>\n          <Navbar />\n        </Container>\n        {/* <Switch> */}\n        <Route exact path='/' component={HomePage} />\n        <Route path='/home' component={HomePage} />\n        <Route  path='/about' component={AboutPage} />\n        <Route path='/search' component={ResultsPage} />\n        {/* </Switch> */}\n      </div>\n    </HashRouter>\n\n    </>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}