{"version":3,"sources":["logo.svg","dummy.png","Home.js","NavBar.js","Textbox.js","RenderResult.js","RenderManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","update","event","setState","name","target","value","search","bind","state","result","n","this","axios","get","then","response","window","location","replace","origin","JSON","stringify","dog","data","catch","error","console","log","className","src","logo","alt","style","color","fontFamily","fontSize","backgroundColor","fontWeight","href","rel","min","max","step","defaultValue","disabled","placeholder","type","onChange","marginLeft","onClick","React","Component","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Jumbotron","fluid","Container","text","formatName","i","a","split","ans","length","first","charAt","toUpperCase","last","substring","energy","similarity","utility","breed","sociability","size","meta","Card","width","flex","Img","img","height","Body","Title","rank","captions","Button","q","hash","rstList","parse","decodeURI","Textbox","CardColumns","map","index","RenderResult","HomePage","Home","AboutPage","ResultsPage","hashHistory","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.66da49ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/dummy.c51e543e.png\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Slider , Input} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axios from 'axios';\n\nclass App extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.search = this.search.bind(this);\n        this.update = this.update.bind(this);\n        this.state = {\n            name: null,\n            result: [],\n        };\n      }\n    \n      search() {\n        const n = this.state.name;\n        axios.get('/api/search?name=' + n)\n            .then((response) => {\n            this.setState(() => {\n                return {\n                    name: null,\n                    result: [],\n                }\n            });\n            window.location.replace(window.location.origin + \"/#/search?\" + JSON.stringify({dog: n, data: response.data}));\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n      }\n\n      update = (event) => {\n        this.setState({name:event.target.value});\n      }\n\n      render() {\n        return (\n            <>\n              <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p style={{color:'black', fontFamily: '\"Courier New\",Courier,\"Lucida Sans Typewriter\",\"Lucida Typewriter\",monospace', fontSize:'60px', backgroundColor: 'rgba(204, 204, 204, 0.5)', fontWeight:'bold'}}>&nbsp; Logtheanalogdog &nbsp;</p>\n                <a\n                  className=\"App-link\"\n                  href=\"https://reactjs.org\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Input your expectations\n                </a>\n                <div>\n                  <Slider min={0} max={100} step={1} defaultValue={30} disabled={false}></Slider>\n                  <Input placeholder={\"input\"} type={\"text\"} style={{}} onChange={this.update}></Input>\n                  <Button type=\"primary\" style={{ marginLeft: 8 }} onClick={this.search}>\n                    Search\n                  </Button>\n                </div>\n              </header>\n            </>\n        );\n      }\n}\n\nexport default App;","import React from 'react';\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\n\nclass App extends React.Component {\n      render() {\n        return (\n          <>\n            <Navbar bg=\"transparent\" variant='light' expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Logtheanalogdog</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#about\">About</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n          </>\n        );\n      }\n}\n\nexport default App;","import React from 'react';\nimport {Jumbotron, Container} from \"react-bootstrap\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Jumbotron fluid {...this.props}>\n                <Container>\n                <h1>{this.props.title}</h1>\n                <p>\n                {this.props.text}\n                </p>\n                </Container>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport {Card, Button} from \"react-bootstrap\";\nimport img from \"./dummy.png\";\nimport RadarChart from 'react-svg-radar-chart';\nimport 'react-svg-radar-chart/build/css/index.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formatName = this.formatName.bind(this)\n    }\n\n    formatName(name) {\n        const a = name.split(\"-\");\n        var i;\n        var ans = \"\";\n        for (i = 0; i < a.length; i++) {\n            const first = a[i].charAt(0).toUpperCase();\n            const last = a[i].charAt(a[i].length-1);\n            console.log(a[i]);\n            ans += (first + a[i].substring(1, a[i].length-1) + last) + \" \";\n        }\n        return ans;\n    }\n\n    render() {\n        const data = [\n            {\n              data: {\n                energy: this.props.similarity,\n                utility: 0.5,\n                breed: 0.5,\n                sociability: 0.5,\n                size: 0.5\n                \n              },\n              meta: { color: 'aqua' }\n            }\n          ];\n       \n      const captions = {\n            // columns\n            energy: 'Energy Match',\n            utility: 'Utility Match',\n            breed: 'Breed Match',\n            sociability: 'Sociability Match',\n            size: 'Size Match'\n          };\n        return (\n            <Card style={{ width: '18rem', flex: '1', size: 'cover'}}>\n                <Card.Img variant=\"top\" src={img} height='180px' />\n                <Card.Body>\n                    <Card.Title>{this.props.rank + \". \" + this.formatName(this.props.name)}</Card.Title>\n                    <RadarChart captions={captions} data={data} size={200}/>\n                    <Button variant=\"secondary\">Learn More</Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport {CardColumns, Container} from \"react-bootstrap\";\nimport RenderResult from \"./RenderResult\";\nimport Textbox from \"./Textbox\";\n\nclass App extends React.Component {\n    \n    render() {\n        const q = window.location.hash;\n        const rstList = JSON.parse(decodeURI(q.substring(9, q.length)));\n        console.log(rstList.data);\n        return (\n            <>\n            \n            <Container>\n                <Textbox title={rstList.dog.toUpperCase()}/>\n                <CardColumns fluid=\"xs\">\n                {rstList.data.map((value, index) => (\n                    <>\n                        <RenderResult rank={index+1} name={value[0]} similarity={value[1]} />\n                    </>\n                ))}\n                </CardColumns>\n            </Container>\n            </>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport Home from './Home';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Navbar from './NavBar';\nimport {Container} from 'react-bootstrap';\nimport TextBox from './Textbox';\nimport RenderResult from './RenderManager';\n\n\nfunction HomePage() {\n  return (<Home/>);\n}\n\nfunction AboutPage() {\n  return (\n    <Container>\n      <TextBox title=\"About Logtheanalogdog\" text=\"Sophie Zheng (sz374), Matthew Xu (mx68), Neil Sethi (ns784),\n       Jakob Kaminsky (jk989), Yihe Zhang (yz2434)// TODO replace\" />\n    </Container>\n  );\n}\n\nfunction ResultsPage() {\n  return (\n    <RenderResult/>\n  );\n}\n\nfunction App() {\n  return (\n    <>\n    <HashRouter hashHistory>\n      <div className='App'>\n        <Container fluid>\n          <Navbar />\n        </Container>\n        {/* <Switch> */}\n        <Route exact path='/' component={HomePage} />\n        <Route path='/home' component={HomePage} />\n        <Route  path='/about' component={AboutPage} />\n        <Route path='/search' component={ResultsPage} />\n        {/* </Switch> */}\n      </div>\n    </HashRouter>\n\n    </>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}